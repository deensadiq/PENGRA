<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8RfCq2iiOC6w0gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFUAAAAtCAYAAADfhCf2AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAJK0lEQVRoQ+2Ya2xVVRqGpfT0svdu6Q3o
        BaTQFiwdLh0LM0AZQWqMJA5gDPyxsf6YHyJGjCJEJylOIooOMl5QiFq1cWAGDBgxOpEBynCrUFrAUmC4
        FaYFGii9nNPT0p72m/fdPatz6KxTypz5Ac35kidd511rfWuf93x77bV7n4gE+T+jFYMEhlYMEhhaMUhg
        aMUggaEVgwSGVgwSGFoxSGBoxSCBoRX7y94JExw7oqIe3mGaf9xhGD+Aw15+sDX0cYxu7kBGK96OXUlJ
        Jkz7fYlh1JeZppyOi5OaSZOkbuZMqZs9W2pycuT08OHCPo7hWM7R5RqIaMW+2GFZebsM4/IxGHZ5+nRp
        ePVVcX7xhbi++uoWnMXF0rBypVzOzRWO5RzO1eUcaGhFf6DiluwzjI7zI0bIjddeEyfN6wf1MP58Sopw
        LnPocg8ktKKOnaaZf9Aw5OK4cdL43nvSjOr8L778shtNX8O770p1WpowB3Pp1hgoaMXe7LKsnL2G0Xru
        /vvlxurV0vjRRzZNNGzzZnF++63cPHtWOurqpOPqVWnavt3WmrdskSaYrMbXv/GGnE1OFuZiTt1aAwGt
        6EttYeGg3YZxsCo6Wupeeknq16yRxg0bxAkzW3btkpbycnFu3Sqea9cwXMTT0SFfL1woraWl4gaubdvE
        CXMbP/nEnnv1+eelKipKmJO51ToDCa3oS4llLTiEB83FOXPk+qpV0vTpp+LauFFa9++XLo9HjsCwBlSs
        B1XKsE1dsEDaysqkq6tLWisrxYnxnNNcVCTX33xTqnFKYE7mVusMJLSiL3sMY3vlkCFy9eWXpQm3sOuz
        z8T93XfS1dmJbpFv8MBqWL9ePFeu2J9tUx9/XNzffy+daDNqMZ7zSDPGMhdzMje6tev2xR3GLBDT3bx9
        6Na7U7Si4sDQodZ+7H9nHnxQGt56S1wffmjjuX4d3SJ/X7tW/oxzqfODD8RTW2trtqmPPWaPq9u0ya7W
        NpdLKpYv75nf+M47wpzMzTUwTbu+P+4wOIHG9it0690pWlGxz7LmHMLTuuapp8T19ts2bhjFuHHpkhRN
        m9aje/CZYZualycuPNBI+6lTtr4T7QY8qJRem58vzM010K1d3x+9glVYALaB3d6/S4GqzrvL1P2m+bsy
        PFTq8YBy4SBPbu7ejS6YhCPSZR/dU11t67apDz3Uo7d6f4RTO3fKgUWLevSGV14R5uYa6Nau7w+fmAwu
        eFkLCsHnoMHbZtxdph4wzRfLk5LEiT2wBSaQjkOH0CWyD8YojXjOnbN129QZM8S1dKk0oxpdixfb+pWT
        J+UvDzwgzmeftce7li2TCrzKcg10a9f3hzdoKM2jib0jFczvbt5lph40zcU0teW553poxzGKcer992/R
        PWfO2DpN3TJ6tDRNmSJNOTnihLGM6sOHpQgmNk2dKq6nn7bnHENuroFu7fr+8AarU2do77i7TC01zd/y
        6OOaP1/cBQXd4FjEqN+z5z8a8KASGbaprO5Jk2zasN8ySouLZXNiYreOSm558kkpx9mXa6Bbu74/EDSJ
        jf481XWmssqp6eZT89dH/ZZc2uvTiYpDMTHJMLWrHrdty6OPihtGND7zjHja26UTuJcskZZHHhEXnuQX
        XnhBvsE7/rYVK+RrVKQrK8vWO2tqkEpk/RNPSCneyGwdNGVm8qzaxTXUev0Fwf2SD6X+hK+pNLMCUFOo
        vZfBLYNbCnXeCdxGGL666mMu/fXpRF8Om+ZP51Fh7rFjxT1+vLizs+UizpuMTryaunGQZ981vNdXwTRS
        O2aMuCdMkI4ff7TH8dZfERkpjRkZ3XnAv1JShLnRrV23LxD/i6msPJrB04Eyi6cGmsXTAoM5+cDjWPYx
        OFbt3dSJOmnor08n+lJmWS8esSxxjholrdgrSTXMqa2oQLdIF15P219/XdpwvGqFma24vW+igju9RylX
        fb2sRKXvGTasZ35Laqocxa3P3BiiXbcvEMqM/oQyVc3pfVvzB6LZDLY5RhnKoOHMwWpVt7/SUrXXpxN9
        OZqcbJSZZs2JmBhpGzlSbno5kp4uJ/DW5Btd2E99g0/8P6Bi/4q3JzWP/DMujv/ArmFuDNOu2xcIGtP7
        y/sLZaq/6mafndQbynx1i3Me+3XM0l6fTuxNhWXl86B+kuZgK2j3cjw+XjbhIVaxdas04d2fr67uxkY5
        XVIiG3F0Ws5/TuPHUOPJ2dhY+9Bfjpy6tfqDN1RV2XubJlRF2l8e9KdSVXAM917e5pzHdu+wtxDt9elE
        HUct62P+LxRmSDMqzZOQYNMGY3/Crfw5+taA1eHhsgH7ZwkO9s3oU+Na0D4GjTmYS7dGf/EJddDnF1dm
        0WTqNIuhTGX/7fZU33kcRzjPdww/q3VjtNenE3VUZWQ4jpnmtlKYUgKqYG4TzOxE9faFC5zG2H9gDucy
        B3Pp1ugvvUJVLDsUNI9GMvhZtW/39KfJSmdOdRfwr+8aamvQX59O9MeFvLyQ45a1qswwumjsTrAP/Izb
        /Cy4RGDgOfw9AQ54x3As53Auc+hy3wl+gl+S5ikjVKgq9Q01trfOoOavjzrpCe316cTb8fOQIdOOm+Ze
        7o2swB1+YB/HcCzn6HINRLRib9atWzeooKAgZObMmaETJ050ZGRkhKWPHBnxN8uajdfMP1WYZlW5abYf
        QXUStqmxD2MeThsxIiItLS08KyvLMWPGjNBFixaFFBYWDqqsrNSud6+jFZctWxYyefJkR3JycmRsbGx0
        VFRUnGEYwyMiIlLCw8NHhYWFpYFxDodjfGho6ESQHetwTJ3ucOQRtH8F7ZdgEvgFxmaCDMxNRY4RkZGR
        iZZlxcfExAxJTEw0MjMzw/Lz8wPeFu4WtOLcuXMHp6amhsfFxUVFR0fHwtBhXkNTaQ7MzPSaSeOmgulg
        5uDBg2eFhITMRvs3IBf8GuSAyZiThbljwRjkGqmM5Y+WkpISkZubG6q7lnsRragoLi4etHDhwpApU6aE
        pqenh7FyExISTFQYvI6OoSkgAaYPZSWDRC9sDzNNcyjH8IdhVcbHx1tJSUmRo0ePDs/OznbMmzdvcFFR
        0SDd2vcyWjFIYGjFIIGhFYMEhlYMEhhaMUhgaMUggaEVgwSGVgwSCHLfvwG50esehRqNIwAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>