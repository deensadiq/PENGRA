<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>